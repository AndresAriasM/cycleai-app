// src/styles/components/_buttons.scss

// ========================================
// BUTTON COMPONENTS - CycleAI
// ========================================

.btn {
    @include button-base;
    
    // Size variants
    &--sm {
      padding: $space-2 $space-4;
      font-size: $font-sm;
      min-height: 32px;
      
      .icon {
        width: 14px;
        height: 14px;
      }
    }
    
    &--md {
      padding: $space-3 $space-6;
      font-size: $font-base;
      min-height: 40px;
      
      .icon {
        width: 16px;
        height: 16px;
      }
    }
    
    &--lg {
      padding: $space-4 $space-8;
      font-size: $font-lg;
      min-height: 48px;
      
      .icon {
        width: 20px;
        height: 20px;
      }
    }
    
    &--xl {
      padding: $space-5 $space-10;
      font-size: $font-xl;
      min-height: 56px;
      
      .icon {
        width: 24px;
        height: 24px;
      }
    }
    
    // Style variants
    &--primary {
      @include button-primary;
    }
    
    &--secondary {
      @include button-secondary;
    }
    
    &--outline {
      @include button-outline;
    }
    
    &--ghost {
      @include button-base;
      background: transparent;
      color: $text-secondary;
      border: 1px solid transparent;
      
      &:hover:not(:disabled) {
        background: $gray-100;
        color: $text-primary;
      }
    }
    
    &--success {
      @include button-base;
      background: linear-gradient(135deg, $success, darken($success, 10%));
      color: white;
      box-shadow: 0 4px 14px 0 rgba($success, 0.39);
      
      &:hover:not(:disabled) {
        background: linear-gradient(135deg, darken($success, 5%), darken($success, 15%));
        transform: translateY(-2px);
      }
    }
    
    &--warning {
      @include button-base;
      background: linear-gradient(135deg, $warning, darken($warning, 10%));
      color: white;
      box-shadow: 0 4px 14px 0 rgba($warning, 0.39);
      
      &:hover:not(:disabled) {
        background: linear-gradient(135deg, darken($warning, 5%), darken($warning, 15%));
        transform: translateY(-2px);
      }
    }
    
    &--error {
      @include button-base;
      background: linear-gradient(135deg, $error, darken($error, 10%));
      color: white;
      box-shadow: 0 4px 14px 0 rgba($error, 0.39);
      
      &:hover:not(:disabled) {
        background: linear-gradient(135deg, darken($error, 5%), darken($error, 15%));
        transform: translateY(-2px);
      }
    }
    
    // Full width
    &--full {
      width: 100%;
    }
    
    // Icon only
    &--icon {
      padding: $space-3;
      aspect-ratio: 1;
      min-width: auto;
      
      &.btn--sm {
        padding: $space-2;
      }
      
      &.btn--lg {
        padding: $space-4;
      }
      
      &.btn--xl {
        padding: $space-5;
      }
    }
    
    // Loading state
    &--loading {
      position: relative;
      color: transparent !important;
      pointer-events: none;
      
      &::after {
        content: '';
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        @include spinner(20px, currentColor);
      }
      
      &.btn--sm::after {
        @include spinner(16px, currentColor);
      }
      
      &.btn--lg::after {
        @include spinner(24px, currentColor);
      }
    }
    
    // Floating action button
    &--fab {
      position: fixed;
      bottom: $space-6;
      right: $space-6;
      z-index: $z-fixed;
      border-radius: 50%;
      width: 56px;
      height: 56px;
      padding: 0;
      box-shadow: 0 4px 18px rgba($primary-600, 0.4);
      
      &:hover:not(:disabled) {
        transform: translateY(-2px) scale(1.05);
        box-shadow: 0 8px 25px rgba($primary-600, 0.5);
      }
    }
  }
  
  // Button groups
  .btn-group {
    display: inline-flex;
    gap: 1px;
    
    .btn {
      border-radius: 0;
      
      &:first-child {
        border-top-left-radius: $radius-lg;
        border-bottom-left-radius: $radius-lg;
      }
      
      &:last-child {
        border-top-right-radius: $radius-lg;
        border-bottom-right-radius: $radius-lg;
      }
      
      &:only-child {
        border-radius: $radius-lg;
      }
    }
    
    &--vertical {
      flex-direction: column;
      
      .btn {
        &:first-child {
          border-radius: $radius-lg $radius-lg 0 0;
        }
        
        &:last-child {
          border-radius: 0 0 $radius-lg $radius-lg;
        }
      }
    }
  }